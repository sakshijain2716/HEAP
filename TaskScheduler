class Solution {
public:
    int leastInterval(vector<char>& tasks, int n) {
        int m = tasks.size();
        vector<int> count(25);
        for(int i=0 ; i<m ; i++)
        count[tasks[i]-'A']++;

        priority_queue<int> pq;
        for(auto it:count)
        {
            if(it>0)
            pq.push(it);
        }

        int chunks = pq.top()-1;
        int spaces = chunks*n;

        pq.pop();
        while(!pq.empty())
        {
            int freq = pq.top();
            spaces -= min(chunks , freq);
            pq.pop();
        }
        return spaces>0 ? spaces+m : m;
    }
};
